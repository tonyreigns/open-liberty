/*******************************************************************************
 * Copyright (c) 2024 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package io.openliberty.microprofile.telemetry20.logging.internal;

import java.util.List;

import com.ibm.websphere.ras.Tr;
import com.ibm.websphere.ras.TraceComponent;
import com.ibm.ws.collector.Target;

import io.opentelemetry.api.logs.LogRecordBuilder;

/**
 * Telemetry Log Emitter is responsible for sending log events generated by collector tasks
 * to the relevant end point, which would be the configured log exporter for MicroProfile Telemetry.
 */
public class TelemetryLogEmitter implements Target {
    
    private static final TraceComponent tc = Tr.register(TelemetryLogEmitter.class);
    
    @Override
    public void sendEvents(List<Object> formattedEvents) {
        //Called by EventsBuffer to emit the formatted log events
        for (Object builder : formattedEvents) {
            if (builder instanceof LogRecordBuilder) {
                if (TraceComponent.isAnyTracingEnabled() && tc.isDebugEnabled()) {
                    Tr.debug(tc, "Emitting log record: " + builder.toString());
                }
                ((LogRecordBuilder) builder).emit();
            }
        }
    }
    
    @Override
    public void close() {
    }
}
